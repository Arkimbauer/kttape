{"ast":null,"code":"import validate from '../../utils/validate';\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\nexport default function (category) {\n  const _sessionStorage = sessionStorage,\n        token = _sessionStorage.token;\n  return (async () => {\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/user/articles/\").concat(category), {\n      method: 'GET',\n      headers: {\n        'authorization': \"bearer \".concat(token)\n      }\n    });\n\n    if (response.status !== 200) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}","map":{"version":3,"sources":["/Users/adriaarki/bootcamp/collab/skylab-bootcamp-201907/staff/adria-arquimbau/KTBO/ktbo-app/src/logic/retrieve-category/index.js"],"names":["validate","REACT_APP_API_URL","process","env","category","sessionStorage","token","response","fetch","method","headers","status","json","error","Error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA,eAAe,UAAUG,QAAV,EAAoB;AAAA,0BAIbC,cAJa;AAAA,QAIvBC,KAJuB,mBAIvBA,KAJuB;AAM/B,SAAO,CAAC,YAAY;AAEhB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIP,iBAAJ,4BAAuCG,QAAvC,GAAmD;AAE3EK,MAAAA,MAAM,EAAE,KAFmE;AAG3EC,MAAAA,OAAO,EAAE;AAAC,0CAA2BJ,KAA3B;AAAD;AAHkE,KAAnD,CAA5B;;AAMA,QAAIC,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAAA,mBACP,MAAMJ,QAAQ,CAACK,IAAT,EADC;AAAA,YACjBC,KADiB,QACjBA,KADiB;;AAEzB,YAAMC,KAAK,CAACD,KAAD,CAAX;AACH,KAHD,MAGO;AACH,aAAO,MAAMN,QAAQ,CAACK,IAAT,EAAb;AACH;AAEJ,GAfM,GAAP;AAgBH","sourcesContent":["import validate from '../../utils/validate'\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\nexport default function (category) {\n\n    \n\n    const { token } = sessionStorage\n\n    return (async () => {\n         \n        const response = await fetch(`${REACT_APP_API_URL}/user/articles/${category}`, {\n            \n            method: 'GET',\n            headers: {'authorization': `bearer ${token}` }\n        })\n\n        if (response.status !== 200) {\n            const { error } = await response.json()\n            throw Error(error)\n        } else {\n            return await response.json()\n        }\n\n    })()\n}"]},"metadata":{},"sourceType":"module"}