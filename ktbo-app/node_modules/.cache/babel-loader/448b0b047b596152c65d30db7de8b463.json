{"ast":null,"code":"import _slicedToArray from \"/Users/adriaarki/Desktop/KTBO/ktbo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/My-orders/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport logic from '../../logic';\nimport ResultOrders from '../../components/My-orders/Result-orders';\n\nfunction MyOrders() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        orders = _useState4[0],\n        setOrders = _useState4[1];\n\n  async function handleOrders() {\n    try {\n      const _ref = await logic.retrieveAllUserOrders(),\n            orders = _ref.orders;\n\n      setOrders(orders);\n    } catch (error) {\n      setError(error); //TODO MODAL\n    }\n  }\n\n  useEffect(() => {\n    handleOrders();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"main\", {\n    className: \"myOrdersMain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"myOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"myOrders__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"My Orders\"), orders && orders.map(element => {\n    return React.createElement(ResultOrders, {\n      key: element.id,\n      element: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default withRouter(MyOrders);","map":{"version":3,"sources":["/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/My-orders/index.js"],"names":["React","useState","useEffect","withRouter","logic","ResultOrders","MyOrders","error","setError","orders","setOrders","handleOrders","retrieveAllUserOrders","map","element","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;;AAKA,SAASC,QAAT,GAAoB;AAAA,oBAEQL,QAAQ,CAAC,IAAD,CAFhB;AAAA;AAAA,QAEXM,KAFW;AAAA,QAEJC,QAFI;;AAAA,qBAGUP,QAAQ,CAAC,IAAD,CAHlB;AAAA;AAAA,QAGXQ,MAHW;AAAA,QAGHC,SAHG;;AAKlB,iBAAeC,YAAf,GAA8B;AAE5B,QAAI;AAAA,mBACiB,MAAMP,KAAK,CAACQ,qBAAN,EADvB;AAAA,YACMH,MADN,QACMA,MADN;;AAEFC,MAAAA,SAAS,CAACD,MAAD,CAAT;AAED,KAJD,CAIE,OAAOF,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR,CADc,CAEd;AACD;AACF;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,YAAY;AACb,GAHQ,EAGP,EAHO,CAAT;AAME,SAAO,0CACP;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAIGF,MAAM,IAAIA,MAAM,CAACI,GAAP,CAAWC,OAAO,IAAI;AAC/B,WAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA3B;AAA+B,MAAA,OAAO,EAAED,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFU,CAJb,CADJ,CADO,CAAP;AAYH;;AAED,eAAeX,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport logic from '../../logic'\n\nimport ResultOrders from '../../components/My-orders/Result-orders'\n\n\n\n\nfunction MyOrders() {\n\n  const [error, setError] = useState(null)\n  const [orders, setOrders] = useState(null)\n\n  async function handleOrders() {\n  \n    try {\n      const { orders } = await logic.retrieveAllUserOrders()  \n      setOrders(orders)\n      \n    } catch (error) {\n      setError(error)\n      //TODO MODAL\n    }\n  }\n\n  useEffect(() => {\n    \n    handleOrders()\n  },[])\n\n\n    return <>\n    <main className=\"myOrdersMain\">\n        <section className=\"myOrders\">\n          \n          <h1 className=\"myOrders__title\">My Orders</h1>\n\n          {orders && orders.map(element => {\n            return <ResultOrders key={element.id} element={element} />\n          })}\n        </section>\n        </main>\n    </>\n}\n\nexport default withRouter(MyOrders)"]},"metadata":{},"sourceType":"module"}