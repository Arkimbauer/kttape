{"ast":null,"code":"var _jsxFileName = \"/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Admin-panel/Result-all-admin-orders/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nfunction ResultOrders({\n  orders\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"myOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, orders && orders.map(order => {\n    const state = order.state,\n          date = order.date,\n          owner = order.owner,\n          items = order.items,\n          id = order.id;\n    let totalPrice = 0;\n    return React.createElement(\"section\", {\n      className: \"myOrdersAdmin__order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"abc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, items.map(item => {\n      const totalItem = item.article.price * item.quantity;\n      totalPrice += totalItem;\n      return React.createElement(\"ul\", {\n        className: \"myOrders__order--items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Ref: \", item.article.ref), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, item.article.title), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, item.quantity, \" un\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, item.article.price, \" \\u20AC\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"TOTAL: \", totalItem.toFixed(2), \" \\u20AC\"));\n    })), React.createElement(\"ul\", {\n      className: \"myOrdersAdmin__order--data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"statusAdminOrder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"State:\"), \" \", React.createElement(\"p\", {\n      className: \"status__\".concat(state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, state.toUpperCase())), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"DATE: \", React.createElement(Moment, {\n      format: \"YYYY-MM-DD HH:mm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, date)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"COMPANY: \", owner.company), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"COUNTRY: \", owner.country), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"EMAIL: \", owner.email), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"TOTAL PRICE: \", totalPrice.toFixed(2), \"\\u20AC\")));\n  })));\n}\n\nexport default withRouter(ResultOrders);","map":{"version":3,"sources":["/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Admin-panel/Result-all-admin-orders/index.js"],"names":["React","useState","useEffect","withRouter","Moment","ResultOrders","orders","map","order","state","date","owner","items","id","totalPrice","item","totalItem","article","price","quantity","ref","title","toFixed","toUpperCase","company","country","email"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAkC;AAI9B,SAAO,0CACH;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAG;AAAA,UAGnBC,KAHmB,GAGcD,KAHd,CAGnBC,KAHmB;AAAA,UAGZC,IAHY,GAGcF,KAHd,CAGZE,IAHY;AAAA,UAGNC,KAHM,GAGcH,KAHd,CAGNG,KAHM;AAAA,UAGCC,KAHD,GAGcJ,KAHd,CAGCI,KAHD;AAAA,UAGQC,EAHR,GAGcL,KAHd,CAGQK,EAHR;AAI1B,QAAIC,UAAU,GAAG,CAAjB;AAEJ,WAAO;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIH;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBF,KAAK,CAACL,GAAN,CAAUQ,IAAI,IAAG;AAClC,YAAMC,SAAS,GAAGD,IAAI,CAACE,OAAL,CAAaC,KAAb,GAAqBH,IAAI,CAACI,QAA5C;AACAL,MAAAA,UAAU,IAAIE,SAAd;AACA,aAAO;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUD,IAAI,CAACE,OAAL,CAAaG,GAAvB,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAI,CAACE,OAAL,CAAaI,KAAlB,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,IAAI,CAACI,QAAV,QAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACE,OAAL,CAAaC,KAAlB,YAJG,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYF,SAAS,CAACM,OAAV,CAAkB,CAAlB,CAAZ,YALG,CAAP;AAOC,KAVgB,CAArB,CAJG,EAeH;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjC,OAA+C;AAAG,MAAA,SAAS,oBAAab,KAAb,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,KAAK,CAACc,WAAN,EAAnC,CAA/C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCb,IAAnC,CAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcC,KAAK,CAACa,OAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcb,KAAK,CAACc,OAApB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYd,KAAK,CAACe,KAAlB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBZ,UAAU,CAACQ,OAAX,CAAmB,CAAnB,CAAlB,WANJ,CAfG,CAAP;AAyBC,GA/BU,CAFf,CADG,CAAP;AAwCH;;AAED,eAAenB,UAAU,CAACE,YAAD,CAAzB","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nfunction ResultOrders({ orders }) {\n\n \n\n    return <>\n        <section className=\"myOrders\">\n\n            {orders && orders.map(order =>{\n                \n                \n                const {state, date, owner, items, id} = order\n                let totalPrice = 0\n\n            return <section className=\"myOrdersAdmin__order\" >\n\n\n                \n                <ul className=\"abc\">{items.map(item =>{\n                    const totalItem = item.article.price * item.quantity\n                    totalPrice += totalItem\n                    return <ul className=\"myOrders__order--items\">\n                        <li>Ref: {item.article.ref}</li>\n                        <li>{item.article.title}</li>\n                        <li>{item.quantity} un</li>\n                        <li>{item.article.price} €</li>\n                        <li>TOTAL: {totalItem.toFixed(2)} €</li>\n                        </ul>\n                    })}</ul>\n                <ul className=\"myOrdersAdmin__order--data\">\n                    <li className=\"statusAdminOrder\"><p>State:</p> <p className={`status__${state}`}>{state.toUpperCase()}</p></li>\n                    <li>DATE: <Moment format=\"YYYY-MM-DD HH:mm\">{date}</Moment></li>\n                    <li>COMPANY: {owner.company}</li>\n                    <li>COUNTRY: {owner.country}</li>\n                    <li>EMAIL: {owner.email}</li>\n                    <li>TOTAL PRICE: {totalPrice.toFixed(2)}€</li>\n                </ul>\n                \n            </section>\n            })}\n        </section>\n    \n\n    </>\n\n}\n\nexport default withRouter(ResultOrders)"]},"metadata":{},"sourceType":"module"}