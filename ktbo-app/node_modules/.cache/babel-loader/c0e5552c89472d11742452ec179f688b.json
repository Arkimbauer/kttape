{"ast":null,"code":"var _jsxFileName = \"/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Landing/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext, useEffect } from 'react';\nimport Context from '../Context';\nimport logic from '../../logic';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../Login';\n\nfunction Landing() {\n  const _useContext = useContext(Context),\n        credentials = _useContext.credentials,\n        setUser = _useContext.setUser;\n\n  useEffect(() => {\n    if (credentials) {\n      const id = credentials.id,\n            token = credentials.token;\n\n      async function retrieve() {\n        try {\n          const _ref = await logic.retrieveUser(id, token),\n                userRetrieved = _ref.user;\n\n          setUser(userRetrieved);\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n\n      retrieve();\n    }\n  }, [credentials]);\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}\n\nexport default withRouter(Landing);","map":{"version":3,"sources":["/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Landing/index.js"],"names":["React","useContext","useEffect","Context","logic","withRouter","Login","Landing","credentials","setUser","id","token","retrieve","retrieveUser","userRetrieved","user","error","console","log","message"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,OAAT,GAAmB;AAAA,sBAEkBN,UAAU,CAACE,OAAD,CAF5B;AAAA,QAEPK,WAFO,eAEPA,WAFO;AAAA,QAEMC,OAFN,eAEMA,OAFN;;AAIfP,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIM,WAAJ,EAAiB;AAAA,YACPE,EADO,GACOF,WADP,CACPE,EADO;AAAA,YACHC,KADG,GACOH,WADP,CACHG,KADG;;AAGf,qBAAeC,QAAf,GAA0B;AACxB,YAAI;AAAA,uBAC8B,MAAMR,KAAK,CAACS,YAAN,CAAmBH,EAAnB,EAAuBC,KAAvB,CADpC;AAAA,gBACYG,aADZ,QACMC,IADN;;AAEFN,UAAAA,OAAO,CAACK,aAAD,CAAP;AACD,SAHD,CAGE,OAAME,KAAN,EAAa;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF;;AACDP,MAAAA,QAAQ;AACT;AACJ,GAfQ,EAeN,CAACJ,WAAD,CAfM,CAAT;AAiBA,SAAQ,0CAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFI,CAAR;AAOH;;AACD,eAAeH,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext, useEffect } from 'react'\nimport Context from '../Context'\nimport logic from '../../logic'\nimport { withRouter } from 'react-router-dom'\nimport Login from '../Login'\n\nfunction Landing() {\n\n    const { credentials, setUser } = useContext(Context)\n\n    useEffect(() => {\n\n        if (credentials) {\n          const { id, token } = credentials\n\n          async function retrieve() {\n            try {\n              const { user: userRetrieved } = await logic.retrieveUser(id, token)\n              setUser(userRetrieved)\n            } catch(error) {\n              console.log(error.message)\n            }\n          }                                      \n          retrieve()\n        }\n    }, [credentials])\n\n    return  <>\n  \n        <section>\n          <Login />\n        </section>\n        \n      </>\n}\nexport default withRouter(Landing)"]},"metadata":{},"sourceType":"module"}