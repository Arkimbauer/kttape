{"ast":null,"code":"/* // eslint-disable-next-line\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n// eslint-disable-next-line\nconst URL_REGEX = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/ \n// eslint-disable-next-line\nconst DATE_REGEX = /[0-1]{1}[0-9]{1}[\\/][0-9]{2}/\n\nmodule.exports = {\n\n        string(target, name, empty = true, values) {\n            if (typeof target !== 'string') throw TypeError(`${name} with value ${target} is not a string`)\n            if (empty && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (values && !values.includes(target)) throw new Error(`${name} with value ${target} does not match one of the expected values: ${values.join(', ')}`)\n        },\n\n        number(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (typeof target !== 'number') throw TypeError(`${name} with value ${target} is not a number`)\n        },\n\n        boolean(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (typeof target !== 'boolean') throw TypeError(`${name} with value ${target} is not a boolean`)\n        },\n\n        date(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (!DATE_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid date`)\n        },\n\n        email(target, name) {\n            if (!EMAIL_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid e-mail`)\n        },\n\n        function(target, name) {\n            if (typeof target !== 'function') throw TypeError(`${name} with value ${target} is not a function`)\n        },\n\n        url(target, name) {\n            if (!URL_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid URL`)\n        }\n} */","map":{"version":3,"sources":["/Users/adriaarki/bootcamp/collab/skylab-bootcamp-201907/staff/adria-arquimbau/KTBO/ktbo-app/src/utils/validate/index.js"],"names":[],"mappings":"AAAA","sourcesContent":["/* // eslint-disable-next-line\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n// eslint-disable-next-line\nconst URL_REGEX = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/ \n// eslint-disable-next-line\nconst DATE_REGEX = /[0-1]{1}[0-9]{1}[\\/][0-9]{2}/\n\nmodule.exports = {\n\n        string(target, name, empty = true, values) {\n            if (typeof target !== 'string') throw TypeError(`${name} with value ${target} is not a string`)\n            if (empty && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (values && !values.includes(target)) throw new Error(`${name} with value ${target} does not match one of the expected values: ${values.join(', ')}`)\n        },\n\n        number(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (typeof target !== 'number') throw TypeError(`${name} with value ${target} is not a number`)\n        },\n\n        boolean(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (typeof target !== 'boolean') throw TypeError(`${name} with value ${target} is not a boolean`)\n        },\n\n        date(target, name) {\n            if (typeof target === 'string' && !target.trim()) throw new Error(`${name} is empty or blank`)\n            if (!DATE_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid date`)\n        },\n\n        email(target, name) {\n            if (!EMAIL_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid e-mail`)\n        },\n\n        function(target, name) {\n            if (typeof target !== 'function') throw TypeError(`${name} with value ${target} is not a function`)\n        },\n\n        url(target, name) {\n            if (!URL_REGEX.test(target)) throw new Error(`${name} with value ${target} is not a valid URL`)\n        }\n} */"]},"metadata":{},"sourceType":"module"}