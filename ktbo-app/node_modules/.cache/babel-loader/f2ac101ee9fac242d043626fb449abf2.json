{"ast":null,"code":"import validate from '../../utils/validate';\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\n\nfunction removePendingOrder(orderId) {\n  //TODO validate\n  return (async () => {\n    const _sessionStorage = sessionStorage,\n          token = _sessionStorage.token;\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/user/removeOrder/\").concat(orderId), {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': \"bearer \".concat(token)\n      }\n    });\n\n    if (response.status !== 201) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}\n\nexport default removePendingOrder;","map":{"version":3,"sources":["/Users/adriaarki/bootcamp/collab/skylab-bootcamp-201907/staff/adria-arquimbau/KTBO/ktbo-app/src/logic/remove-pending-order/index.js"],"names":["validate","REACT_APP_API_URL","process","env","removePendingOrder","orderId","sessionStorage","token","response","fetch","method","headers","status","json","error","Error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;;AAEA,SAASG,kBAAT,CAA6BC,OAA7B,EAAuC;AAEnC;AAGA,SAAM,CAAC,YAAY;AAAA,4BAEGC,cAFH;AAAA,UAEPC,KAFO,mBAEPA,KAFO;AAIf,UAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIR,iBAAJ,+BAA0CI,OAA1C,GAAqD;AAC7EK,MAAAA,MAAM,EAAE,OADqE;AAE7EC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsC,0CAA2BJ,KAA3B;AAAtC;AAFoE,KAArD,CAA5B;;AAKA,QAAIC,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAAA,mBACP,MAAMJ,QAAQ,CAACK,IAAT,EADC;AAAA,YACjBC,KADiB,QACjBA,KADiB;;AAEzB,YAAMC,KAAK,CAACD,KAAD,CAAX;AACH,KAHD,MAIK;AACD,aAAO,MAAMN,QAAQ,CAACK,IAAT,EAAb;AACH;AAGJ,GAlBK,GAAN;AAmBH;;AACD,eAAeT,kBAAf","sourcesContent":["import validate from '../../utils/validate'\n\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\nfunction removePendingOrder (orderId)  {\n     \n    //TODO validate\n\n    \n    return(async () => {\n\n        const { token } = sessionStorage\n       \n        const response = await fetch(`${REACT_APP_API_URL}/user/removeOrder/${orderId}`, {\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json', 'authorization': `bearer ${token}`}\n            \n        })\n        if (response.status !== 201) {\n            const { error } = await response.json()\n            throw Error(error)\n        }\n        else {\n            return await response.json()\n        }\n        \n\n    })()\n}\nexport default removePendingOrder"]},"metadata":{},"sourceType":"module"}