{"ast":null,"code":"import _slicedToArray from \"/Users/adriaarki/Desktop/KTBO/ktbo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Admin-panel/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport logic from '../../logic';\nimport ResultOrders from './Result-orders';\nimport ResultAllADminOrders from './Result-all-admin-orders';\nimport './index.s';\n\nfunction AdminPanel() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        orders = _useState4[0],\n        setOrders = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        allOrders = _useState6[0],\n        setAllOrders = _useState6[1];\n\n  async function handlePendingOrders() {\n    (async () => {\n      try {\n        const _ref = await logic.retrievePendingOrders(),\n              orders = _ref.orders;\n\n        setAllOrders();\n        setOrders(orders);\n      } catch (error) {\n        setError(error);\n      }\n    })();\n  }\n\n  async function handleAllOrders() {\n    (async () => {\n      try {\n        const orders = await logic.retrieveAllOrders();\n        setOrders();\n        setAllOrders(orders);\n      } catch (error) {\n        setError(error);\n      }\n    })();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"main\", {\n    className: \"adminMain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"adminPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"ADMIN PANEL\"), React.createElement(\"div\", {\n    className: \"adminPanel__buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handlePendingOrders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Retrieve all PENDING orders\"), React.createElement(\"button\", {\n    onClick: handleAllOrders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Retrieve all ORDERS\"))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, orders && React.createElement(ResultOrders, {\n    orders: orders,\n    retrievePendingOrders: handlePendingOrders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), allOrders && React.createElement(ResultAllADminOrders, {\n    orders: allOrders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))));\n}\n\nexport default withRouter(AdminPanel);","map":{"version":3,"sources":["/Users/adriaarki/Desktop/KTBO/ktbo-app/src/components/Admin-panel/index.js"],"names":["React","useState","useEffect","withRouter","logic","ResultOrders","ResultAllADminOrders","AdminPanel","error","setError","orders","setOrders","allOrders","setAllOrders","handlePendingOrders","retrievePendingOrders","handleAllOrders","retrieveAllOrders"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAO,WAAP;;AAKA,SAASC,UAAT,GAAsB;AAAA,oBAEMN,QAAQ,EAFd;AAAA;AAAA,QAEbO,KAFa;AAAA,QAENC,QAFM;;AAAA,qBAGQR,QAAQ,EAHhB;AAAA;AAAA,QAGbS,MAHa;AAAA,QAGLC,SAHK;;AAAA,qBAIcV,QAAQ,EAJtB;AAAA;AAAA,QAIbW,SAJa;AAAA,QAIFC,YAJE;;AAOpB,iBAAeC,mBAAf,GAAqC;AACnC,KAAC,YAAY;AACX,UAAI;AAAA,qBAEe,MAAMV,KAAK,CAACW,qBAAN,EAFrB;AAAA,cAEKL,MAFL,QAEKA,MAFL;;AAGFG,QAAAA,YAAY;AACVF,QAAAA,SAAS,CAACD,MAAD,CAAT;AAED,OANH,CAMI,OAAOF,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AAEF,KAXH;AAYD;;AAED,iBAAeQ,eAAf,GAAiC;AAC/B,KAAC,YAAY;AACX,UAAI;AAEF,cAAMN,MAAM,GAAG,MAAMN,KAAK,CAACa,iBAAN,EAArB;AACAN,QAAAA,SAAS;AAEPE,QAAAA,YAAY,CAACH,MAAD,CAAZ;AAED,OAPH,CAOI,OAAOF,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAXH;AAYD;;AAGC,SAAO,0CACL;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEM,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,IAAI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAAgC,IAAA,qBAAqB,EAAEI,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,EAEGF,SAAS,IAAK,oBAAC,oBAAD;AAAsB,IAAA,MAAM,EAAEA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjB,CADF,CATF,CADK,CAAP;AAmBH;;AAED,eAAeT,UAAU,CAACI,UAAD,CAAzB","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport logic from '../../logic'\nimport ResultOrders from './Result-orders'\nimport ResultAllADminOrders from './Result-all-admin-orders'\nimport './index.s'\n\n\n\n\nfunction AdminPanel() {\n\n  const [error, setError] = useState()\n  const [orders, setOrders] = useState()\n  const [allOrders, setAllOrders] = useState()\n\n    \n  async function handlePendingOrders() {\n    (async () => {\n      try {\n\n        const {orders} = await logic.retrievePendingOrders()\n        setAllOrders()\n          setOrders(orders)\n\n        } catch (error) {\n            setError(error)\n        }\n\n      })()\n  }\n\n  async function handleAllOrders() {\n    (async () => {\n      try {\n\n        const orders = await logic.retrieveAllOrders()\n        setOrders()\n\n          setAllOrders(orders)\n\n        } catch (error) {\n          setError(error)\n        }\n      })()\n  }\n \n  \n    return <>\n      <main className=\"adminMain\">\n        <section className=\"adminPanel\">\n          <h1>ADMIN PANEL</h1>\n          <div className=\"adminPanel__buttons\">\n            <button onClick={handlePendingOrders}>Retrieve all PENDING orders</button>\n            <button onClick={handleAllOrders}>Retrieve all ORDERS</button>\n          </div>\n        </section>\n\n        <section>\n          <ul>          \n            {orders && <ResultOrders orders={orders}   retrievePendingOrders={handlePendingOrders}/>}\n            {allOrders  && <ResultAllADminOrders orders={allOrders} />}\n\n          </ul>\n        </section>\n        </main>\n    </>\n}\n\nexport default withRouter(AdminPanel)"]},"metadata":{},"sourceType":"module"}