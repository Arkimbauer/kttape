{"ast":null,"code":"const REACT_APP_API_URL = process.env.REACT_APP_API_URL;\nimport validate from '../../utils/validate';\n/**\n *\n *\n * @param {String} articleId\n * @param {Number} quantity\n * \n * @returns\n */\n\nfunction addToCart(articleId, quantity) {\n  quantity = Number(quantity);\n  validate.string(articleId, 'articleId');\n  validate.number(quantity, 'quantity');\n  return (async () => {\n    const _sessionStorage = sessionStorage,\n          token = _sessionStorage.token;\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/user/cart\"), {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': \"bearer \".concat(token)\n      },\n      body: JSON.stringify({\n        articleId,\n        quantity\n      })\n    });\n\n    if (response.status !== 201) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}\n\nexport default addToCart;","map":{"version":3,"sources":["/Users/adriaarki/bootcamp/collab/skylab-bootcamp-201907/staff/adria-arquimbau/KTBO/ktbo-app/src/logic/add-to-card/index.js"],"names":["REACT_APP_API_URL","process","env","validate","addToCart","articleId","quantity","Number","string","number","sessionStorage","token","response","fetch","method","headers","body","JSON","stringify","status","json","error","Error"],"mappings":"AAAA,MAAMA,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AACA,OAAOG,QAAP,MAAqB,sBAArB;AAEA;;;;;;;;;AASA,SAASC,SAAT,CAAoBC,SAApB,EAA+BC,QAA/B,EAA0C;AAEtCA,EAAAA,QAAQ,GAAGC,MAAM,CAACD,QAAD,CAAjB;AACAH,EAAAA,QAAQ,CAACK,MAAT,CAAgBH,SAAhB,EAA2B,WAA3B;AACAF,EAAAA,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,EAA0B,UAA1B;AAGA,SAAM,CAAC,YAAY;AAAA,4BAEGI,cAFH;AAAA,UAEPC,KAFO,mBAEPA,KAFO;AAIf,UAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIb,iBAAJ,iBAAmC;AAC3Dc,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsC,0CAA2BJ,KAA3B;AAAtC,OAFkD;AAG3DK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACb,QAAAA,SAAD;AAAYC,QAAAA;AAAZ,OAAf;AAHqD,KAAnC,CAA5B;;AAKA,QAAIM,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;AAAA,mBAEP,MAAMP,QAAQ,CAACQ,IAAT,EAFC;AAAA,YAEjBC,KAFiB,QAEjBA,KAFiB;;AAGzB,YAAMC,KAAK,CAACD,KAAD,CAAX;AACH,KAJD,MAKK;AACD,aAAO,MAAMT,QAAQ,CAACQ,IAAT,EAAb;AACH;AAEJ,GAlBK,GAAN;AAmBH;;AACD,eAAehB,SAAf","sourcesContent":["const REACT_APP_API_URL = process.env.REACT_APP_API_URL\nimport validate from '../../utils/validate'\n\n/**\n *\n *\n * @param {String} articleId\n * @param {Number} quantity\n * \n * @returns\n */\n\nfunction addToCart (articleId, quantity)  {\n    \n    quantity = Number(quantity)\n    validate.string(articleId, 'articleId')\n    validate.number(quantity, 'quantity')\n\n    \n    return(async () => {\n\n        const { token } = sessionStorage\n       \n        const response = await fetch(`${REACT_APP_API_URL}/user/cart`, {\n            method: 'POST',\n            headers: { 'content-type': 'application/json', 'authorization': `bearer ${token}`},\n            body: JSON.stringify({articleId, quantity})\n        })\n        if (response.status !== 201) {\n            \n            const { error } = await response.json()\n            throw Error(error)\n        }\n        else {\n            return await response.json()\n        }\n\n    })()\n}\nexport default addToCart"]},"metadata":{},"sourceType":"module"}