{"ast":null,"code":"import validate from '../../utils/validate';\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL;\nexport default function (email, password) {\n  validate.string(email, 'email');\n  validate.email(email, 'email');\n  validate.string(password, 'password');\n  return (async () => {\n    const response = await fetch(\"\".concat(REACT_APP_API_URL, \"/auth\"), {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n\n    if (response.status !== 200) {\n      const _ref = await response.json(),\n            error = _ref.error;\n\n      throw Error(error);\n    } else {\n      return await response.json();\n    }\n  })();\n}","map":{"version":3,"sources":["/Users/adriaarki/bootcamp/collab/skylab-bootcamp-201907/staff/adria-arquimbau/KTBO/ktbo-app/src/logic/authenticate-user/index.js"],"names":["validate","REACT_APP_API_URL","process","env","email","password","string","response","fetch","method","headers","body","JSON","stringify","status","json","error","Error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA,eAAe,UAAUG,KAAV,EAAiBC,QAAjB,EAA2B;AAEtCL,EAAAA,QAAQ,CAACM,MAAT,CAAgBF,KAAhB,EAAuB,OAAvB;AACAJ,EAAAA,QAAQ,CAACI,KAAT,CAAeA,KAAf,EAAsB,OAAtB;AACAJ,EAAAA,QAAQ,CAACM,MAAT,CAAgBD,QAAhB,EAA0B,UAA1B;AAEA,SAAO,CAAC,YAAY;AAEhB,UAAME,QAAQ,GAAG,MAAMC,KAAK,WAAIP,iBAAJ,YAA8B;AACtDQ,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF6C;AAGtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACT,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf;AAHgD,KAA9B,CAA5B;;AAMA,QAAIE,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;AAAA,mBACP,MAAMP,QAAQ,CAACQ,IAAT,EADC;AAAA,YACjBC,KADiB,QACjBA,KADiB;;AAEzB,YAAMC,KAAK,CAACD,KAAD,CAAX;AACH,KAHD,MAIK;AACD,aAAO,MAAMT,QAAQ,CAACQ,IAAT,EAAb;AACH;AAEJ,GAhBM,GAAP;AAiBH","sourcesContent":["import validate from '../../utils/validate'\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\nexport default function (email, password) {\n\n    validate.string(email, 'email')\n    validate.email(email, 'email')\n    validate.string(password, 'password')\n\n    return (async () => {\n        \n        const response = await fetch(`${REACT_APP_API_URL}/auth`, {\n            method: 'POST',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({email, password})\n        })\n        \n        if (response.status !== 200) {\n            const { error } = await response.json()\n            throw Error(error)\n        }\n        else {\n            return await response.json()\n        }\n            \n    })()\n}"]},"metadata":{},"sourceType":"module"}